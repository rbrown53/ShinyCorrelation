[{"name":"app.R","content":"#if (FALSE) {\n#  library(ggplot2)\n#}\n#webr::install(\"ggplot2\")\nlibrary(ggplot2)\n\nui <- fluidPage(\n  shinyjs::useShinyjs(),\n  textInput(\"cor_guess\", \"Guess the correlation!\"),\n  actionButton(\n    inputId = \"submit_guess\",\n    label = \"Submit Guess\"\n  ),\n  plotOutput(\"graph\"),\n  textOutput(\"message\"),\n  actionButton(\"reset_input\", \"Press to Play Again!\")\n)\n\nserver <- function(input, output, session) {\n  guess <- reactive(as.numeric(input$cor_guess))\n  num_rand <- reactive(rchisq(input$num, 10))\n  x <- rnorm(100, rnorm(1, 100, 50), rchisq(1, 10, 5))\n  y <- sign(runif(1, -1, 1))*x + rnorm(100, 0, 10)\n  DF = data.frame(x, y)\n  true_cor <- cor(x, y)\n  \n  output$graph <- renderPlot(\n    ggplot(DF, aes(x, y)) +\n      geom_point(size = 4)\n  )\n  \n  observeEvent(\n    eventExpr = input[[\"submit_guess\"]],\n    handlerExpr = {\n      output$message <- renderText(\n        paste0(\"Your guess was \",guess(),\".\\n\\n\n             The true value was \", round(true_cor,3),\".\\n\n             That is a difference of \", abs(guess() - round(true_cor,3))\n               ,\".\")\n      )\n    }\n  )\n  \n  observeEvent(input$reset_input, {\n    #shinyjs::reset()\n    session$reload() # Works, but won't store guesses.\n  })\n}\n\n\nshinyApp(ui = ui, server = server)","type":"text"},{"name":"server.R","content":"library(shiny)\nlibrary(tidyverse)\n\nserver <- function(input, output, session) {\n  guess <- reactive(as.numeric(input$cor_guess))\n  num_rand <- reactive(rchisq(input$num, 10))\n  x <- rnorm(100, rnorm(1, 100, 50), rchisq(1, 10, 5))\n  y <- sign(runif(1, -1, 1))*x + rnorm(100, 0, 10)\n  DF = data.frame(x, y)\n  true_cor <- cor(x, y)\n  \n  output$graph <- renderPlot(\n    ggplot(DF, aes(x, y)) +\n      geom_point(size = 3)\n  )\n  \n  observeEvent(\n    eventExpr = input[[\"submit_guess\"]],\n    handlerExpr = {\n      output$message <- renderText(\n        paste0(\"Your guess was \",guess(),\".\\n\\n\n             The true value was \", round(true_cor,3),\".\\n\n             That is a difference of \", abs(guess() - round(true_cor,3))\n               ,\".\")\n      )\n    }\n  )\n  \n  observeEvent(input$reset_input, {\n    #shinyjs::reset()\n    session$reload() # Works, but won't store guesses.\n  })\n}","type":"text"},{"name":"ui.R","content":"library(shiny)\nlibrary(tidyverse)\n\nui <- fluidPage(\n  shinyjs::useShinyjs(),\n  textInput(\"cor_guess\", \"Guess the correlation!\"),\n  actionButton(\n    inputId = \"submit_guess\",\n    label = \"Submit Guess\"\n  ),\n  plotOutput(\"graph\"),\n  textOutput(\"message\"),\n  actionButton(\"reset_input\", \"Press to Play Again!\")\n)","type":"text"},{"name":"app_notlive.R","content":"library(shiny)\nlibrary(tidyverse)\n\nlibrary(shiny)\nlibrary(tidyverse)\n\nui <- fluidPage(\n  shinyjs::useShinyjs(),\n  textInput(\"cor_guess\", \"Guess the correlation!\"),\n  actionButton(\n    inputId = \"submit_guess\",\n    label = \"Submit Guess\"\n  ),\n  plotOutput(\"graph\"),\n  textOutput(\"message\"),\n  actionButton(\"reset_input\", \"Press to Play Again!\")\n)\n\nserver <- function(input, output, session) {\n  guess <- reactive(as.numeric(input$cor_guess))\n  num_rand <- reactive(rchisq(input$num, 10))\n  x <- rnorm(100, rnorm(1, 100, 50), rchisq(1, 10, 5))\n  y <- sign(runif(1, -1, 1))*x + rnorm(100, 0, 10)\n  DF = data.frame(x, y)\n  true_cor <- cor(x, y)\n  \n  output$graph <- renderPlot(\n    ggplot(DF, aes(x, y)) +\n      geom_point(size = 3)\n  )\n  \n  observeEvent(\n    eventExpr = input[[\"submit_guess\"]],\n    handlerExpr = {\n      output$message <- renderText(\n        paste0(\"Your guess was \",guess(),\".\\n\\n\n             The true value was \", round(true_cor,3),\".\\n\n             That is a difference of \", abs(guess() - round(true_cor,3))\n               ,\".\")\n      )\n    }\n  )\n  \n  observeEvent(input$reset_input, {\n    #shinyjs::reset()\n    session$reload() # Works, but won't store guesses.\n  })\n}\n\n\nshinyApp(ui = ui, server = server)","type":"text"}]
